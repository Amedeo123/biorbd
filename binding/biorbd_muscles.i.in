// File : biorbd_muscles.i
%{
#include "Muscles/StateDynamics.h"
#include "Muscles/MuscleGroup.h"
#include "Muscles/Muscle.h"
#include "Muscles/Caracteristics.h"
#include "Muscles/Geometry.h"
#include "Muscles/HillType.h"
#include "Muscles/HillThelenType.h"
#include "Muscles/IdealizedActuator.h"
#include "Muscles/HillThelenTypeFatigable.h"
#include "Muscles/FatigueParameters.h"
#include "Muscles/FatigueState.h"
#include "Muscles/FatigueDynamicState.h"
#include "Muscles/FatigueDynamicStateXia.h"
#include "Muscles/Force.h"
#ifdef IPOPT_FOUND
#include "Muscles/StaticOptimization.h"
#endif
%}
// Instantiate templates
namespace std {
%template(SharedBiorbdMuscle) std::shared_ptr<biorbd::muscles::Muscle>;
%template(VecBiorbdMuscleStateDynamics) std::vector<biorbd::muscles::StateDynamics>;
%template(MatBiorbdMuscleStateDynamics) std::vector<std::vector<biorbd::muscles::StateDynamics>>;
%template(SharedBiorbdMuscleFatigueState) std::shared_ptr<biorbd::muscles::FatigueState>;
}

// Exposing some useful functions
%extend biorbd::Model{
    biorbd::rigidbody::GeneralizedTorque muscularJointTorque(
                const std::vector<biorbd::muscles::StateDynamics> &state,
                const biorbd::rigidbody::GeneralizedCoordinates &Q,
                const biorbd::rigidbody::GeneralizedCoordinates &QDot){
        return self->muscularJointTorque(state, true, &Q, &QDot);
    }

    static biorbd::utils::String getMuscleType(const std::shared_ptr<biorbd::muscles::Muscle> muscle){
        return muscle->type();
    }
}

// extension of muscle casting
%extend biorbd::muscles::Muscle{
    static biorbd::muscles::Muscle& getRef(std::shared_ptr<biorbd::muscles::Muscle> muscle)
    {
        return *(std::dynamic_pointer_cast<biorbd::muscles::Muscle>(muscle));
    }
}

%extend biorbd::muscles::HillType{
    static biorbd::muscles::HillType& getRef(std::shared_ptr<biorbd::muscles::Muscle> muscle)
    {
        return *(std::dynamic_pointer_cast<biorbd::muscles::HillType>(muscle));
    }
}
%extend biorbd::muscles::HillThelenType{
    static biorbd::muscles::HillThelenType& getRef(std::shared_ptr<biorbd::muscles::Muscle> muscle)
    {
        return *(std::dynamic_pointer_cast<biorbd::muscles::HillThelenType>(muscle));
    }
}
%extend biorbd::muscles::HillThelenTypeFatigable{
    static biorbd::muscles::HillThelenTypeFatigable& getRef(std::shared_ptr<biorbd::muscles::Muscle> muscle)
    {
        return *(std::dynamic_pointer_cast<biorbd::muscles::HillThelenTypeFatigable>(muscle));
    }
}
%extend biorbd::muscles::IdealizedActuator{
    static biorbd::muscles::IdealizedActuator& getRef(std::shared_ptr<biorbd::muscles::Muscle> muscle)
    {
        return *(std::dynamic_pointer_cast<biorbd::muscles::IdealizedActuator>(muscle));
    }
}

// extension of muscle fatigueState casting
%extend biorbd::muscles::FatigueState{
    static biorbd::muscles::FatigueState& getRef(std::shared_ptr<biorbd::muscles::FatigueState> state)
    {
        return *state;
    }
}
%extend biorbd::muscles::FatigueDynamicStateXia{
    static biorbd::muscles::FatigueDynamicStateXia& getRef(std::shared_ptr<biorbd::muscles::FatigueState> state)
    {
        return *(std::dynamic_pointer_cast<biorbd::muscles::FatigueDynamicStateXia>(state));
    }
}


// Includes all neceressary files from the API
%include "@CMAKE_SOURCE_DIR@/include/Muscles/Compound.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/Muscle.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/Fatigable.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/HillType.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/HillThelenType.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/HillThelenTypeFatigable.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/IdealizedActuator.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/Muscles.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/MuscleGroup.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/Caracteristics.h"

%include "@CMAKE_SOURCE_DIR@/include/Muscles/FatigueParameters.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/FatigueState.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/FatigueDynamicState.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/FatigueDynamicStateXia.h"
//%include "Muscles/Force.h"
//%include "Muscles/ForceFromInsertion.h"
//%include "Muscles/ForceFromOrigin.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/Geometry.h"
//%include "Muscles/Mesh.h"
//%include "Muscles/PathChanger.h"
//%include "Muscles/PathChangers.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/State.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/StateDynamics.h"
//%include "Muscles/StateDynamicsBuchanan.h"
@SWIG_STATIC_OPTIMIZATION_INCLUDE_COMMAND@

